package View;

import Controller.ExceptionManager;
import Controller.LoginChecker;

public class Login extends javax.swing.JPanel {

    private static final Login loginPane = new Login();

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    public static Login getPane() {
        return loginPane;
    }

    public static void init() {
        loginPane.user.grabFocus();
        loginPane.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        login = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        user = new javax.swing.JFormattedTextField();
        pw = new javax.swing.JPasswordField();

        title.setFont(new java.awt.Font("Segoe UI Semibold", 1, 48)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Java 22");

        login.setBackground(new java.awt.Color(96, 224, 164));
        login.setForeground(new java.awt.Color(0, 0, 0));
        login.setText("Iniciar sesión");
        login.setNextFocusableComponent(exit);
        login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginMouseClicked(evt);
            }
        });
        login.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginKeyPressed(evt);
            }
        });

        exit.setText("Salir");
        exit.setNextFocusableComponent(user);
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        exit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                exitKeyPressed(evt);
            }
        });

        user.setText("usuario");
        user.setFocusCycleRoot(true);
        user.setNextFocusableComponent(pw);
        user.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userFocusGained(evt);
            }
        });

        pw.setText("password");
        pw.setToolTipText("");
        pw.setNextFocusableComponent(login);
        pw.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pwKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(exit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 510, Short.MAX_VALUE)
                .addComponent(login)
                .addGap(52, 52, 52))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(title)
                .addGap(297, 297, 297))
            .addGroup(layout.createSequentialGroup()
                .addGap(273, 273, 273)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(user)
                    .addComponent(pw, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pw, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="Event Listeners">
    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        // Cierra el programa
        System.exit(0);
    }//GEN-LAST:event_exitMouseClicked

    private void loginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginMouseClicked
        logIn();
    }//GEN-LAST:event_loginMouseClicked

    private void pwKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pwKeyPressed
        // Si se presiona intro en el campo de la contraseña se intenta iniciar sesión
        if (evt.getKeyChar() == '\n') {
            logIn();
        }
    }//GEN-LAST:event_pwKeyPressed

    private void userFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userFocusGained
        // Comodidad: selecciona todo el texto cuando se selecciona el elemento
        this.user.selectAll();
    }//GEN-LAST:event_userFocusGained

    private void loginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginKeyPressed
        // Si se presiona intro al tener seleccionado el botón "login" se inicia sesión.
        if (evt.getKeyChar() == '\n') {
            logIn();
        }
    }//GEN-LAST:event_loginKeyPressed

    private void exitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_exitKeyPressed
        if (evt.getKeyChar() == '\n') {
            System.exit(0);
        }
    }//GEN-LAST:event_exitKeyPressed

    private void logIn() {
        // Realiza una comprobación de inicio de sesión.
        boolean isValid = LoginChecker.login(user.getText(), pw.getPassword());
        if (isValid) {
            (MainFrame.getMainFrame()).changePanel(MainFrame.getOrdersPanel());
            MainFrame.changeUserAccess(true);
        } else {
            ExceptionManager.getError(6, "");
        }

        // Si se ha iniciado sesión, se borran los datos que se han utilizado para entrar.
        if (MainFrame.getUserAccess()) {
            this.user.setText("user");
            this.pw.setText("password");
            Empleados.init();
        }
    }
    // </editor-fold>

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exit;
    private javax.swing.JButton login;
    private javax.swing.JPasswordField pw;
    private javax.swing.JLabel title;
    private javax.swing.JFormattedTextField user;
    // End of variables declaration//GEN-END:variables
}
